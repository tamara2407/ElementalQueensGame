package server;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.File;

public class Server {

	private static final int PORT = 13245;
	private static List<ClientHandler> clients = new ArrayList<>();
	private static List<Player> players = new ArrayList<Player>();
	 private static List<Queen> queens = new ArrayList<>();
	 private static final String CSV_FILE_NAME = "players.csv";
	 
	
	public static void main(String[] args) {
		
		 String currentDirectory = Paths.get("").toAbsolutePath().toString();
	     String csvFilePath = currentDirectory + File.separator + CSV_FILE_NAME;
		
	    

		
		 createCSVFile(csvFilePath);

	        
		 loadPlayersFromCSV(csvFilePath);	
		 
		 queens=createQueens();
		 
		
		 
		try(ServerSocket serverSoket = new ServerSocket(PORT)){
			System.out.println("Server started on port "+PORT );
			
			
			
			while(true) {
				Socket socket = serverSoket.accept();
				System.out.println("New client connected");
				ClientHandler clientHandler = new ClientHandler(socket, clients, players,queens);
				System.out.println("New client initialized");
				clients.add(clientHandler);
				System.out.println("New client added to clients");
				new Thread(clientHandler).start();
				System.out.println("New client thread created");
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	

	 private static void createCSVFile(String filePath) {
	        File csvFile = new File(filePath);
	        if(!(csvFile.exists())) {
	            try (FileWriter writer = new FileWriter(csvFile)) {
	                
	                writer.append("username,password,email\n");
	             
	               
	            } catch (IOException e) {
	                e.printStackTrace();
	            }
	        }
	        
	       
	    }
	 
	 private static void loadPlayersFromCSV(String filePath) {
	        File csvFile = new File(filePath);
	        if (csvFile.exists()) {
	            try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
	                String line;
	                // Skip the header line
	                br.readLine();
	                while ((line = br.readLine()) != null) {
	                    String[] values = line.split(",");
	                    if (values.length == 3) {
	                        players.add(new Player(values[0], values[1], values[2]));
	                    }
	                }
	            } catch (IOException e) {
	                e.printStackTrace();
	            }
	        } else {
	            System.out.println("CSV file not found, skipping loading players.");
	        }
	    }
	 
	 public static List<Queen> createQueens() {
	        List<Queen> queens = new ArrayList<>();


	        Queen blaze = new Queen(1, "Blaze", createBlazeSpells(), 100, 100);
	        Queen aqua = new Queen(2, "Aqua", createAquaSpells(), 100, 100);
	        Queen frost = new Queen(3, "Frost", createFrostSpells(), 100, 100);
	        Queen ivy = new Queen(4, "Ivy", createIvySpells(), 100, 100);
	        Queen terra = new Queen(5, "Terra", createTerraSpells(), 100, 100);

	        queens.add(blaze);
	        queens.add(aqua);
	        queens.add(frost);
	        queens.add(ivy);
	        queens.add(terra);

	        return queens;
	    }
	 
	 private static List<Spell> createBlazeSpells() {
		    List<Spell> spells = new ArrayList<>();
		    spells.add(new Spell("Inferno Burst", 20, "A powerful wave of fire that deals significant damage, Effect: 20 damage, Mana: 30", 30));
		    spells.add(new Spell("Ember Storm", 5, "A quick attack with fiery particles that scorch enemies, Effect: 5 damage, Mana: 10", 10));
		    spells.add(new Spell("Flame Eruption", 30, "An explosion of fire that deals damage to all nearby enemies, Effect: 30 damage, Mana: 50", 50));
		    return spells;
		}

		private static List<Spell> createAquaSpells() {
		    List<Spell> spells = new ArrayList<>();
		    spells.add(new Spell("Tsunami Wave", 20, "A massive wave that hits all enemies in its path, Effect: 20 damage, Mana: 20", 20));
		    spells.add(new Spell("Aqua Surge", 30, "A strong water strike that deals damage to an enemy, Effect: 30 damage, Mana: 30", 30));
		    spells.add(new Spell("Healing Waters", 20, "Heals herself or an ally by regenerating HP, Effect: 20 heal, Mana: 30", 30));
		    return spells;
		}

		private static List<Spell> createFrostSpells() {
		    List<Spell> spells = new ArrayList<>();
		    spells.add(new Spell("Blizzard Blast", 10, "A powerful snowstorm that freezes and damages enemies, Effect: 10 damage, Mana: 15", 15));
		    spells.add(new Spell("Icicle Spear", 15, "Ice projectiles that pierce through enemies, Effect: 15 damage, Mana: 20", 20));
		    spells.add(new Spell("Frozen Touch", 20, "Freezes an enemy, Effect: 20 damage, Mana: 30", 30));
		    return spells;
		}

		private static List<Spell> createIvySpells() {
		    List<Spell> spells = new ArrayList<>();
		    spells.add(new Spell("Thorn Whip", 20, "Uses thorny vines to attack enemies, Effect: 20 damage, Mana: 30", 30));
		    spells.add(new Spell("Bloom Heal", 20, "Heals herself or an ally using powerful plants, Effect: 20 heal, Mana: 30", 30));
		    spells.add(new Spell("Poison Spore", 10, "Releases toxic spores that deal damage to enemies, Effect: 10 damage, Mana: 15", 15));
		    return spells;
		}

		private static List<Spell> createTerraSpells() {
		    List<Spell> spells = new ArrayList<>();
		    spells.add(new Spell("Earthquake Smash", 15, "Causes a powerful earthquake that hits all nearby enemies, Effect: 15 damage, Mana: 20", 20));
		    spells.add(new Spell("Boulder Throw", 20, "Throws a massive boulder that deals damage to an enemy, Effect: 20 damage, Mana: 30", 30));
		    spells.add(new Spell("Root Strike", 25, "Attacks enemies with roots emerging from the ground, dealing damage, Effect: 25 damage, Mana: 40", 40));
		    return spells;
		}




}
